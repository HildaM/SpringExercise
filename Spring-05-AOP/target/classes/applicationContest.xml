<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="userService" class="com.quan.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.quan.log.beforeLog"/>
    <bean id="afterLog" class="com.quan.log.afterLog"/>
    <bean id="myAop" class="com.quan.diy.DIYAOP"/>

<!--    方式三：使用注解实现aop-->
    <bean id="annotationPointCut" class="com.quan.diy.AnnotationPointCut"/>
<!--    开启注解支持-->
    <aop:aspectj-autoproxy/>

<!--    <aop:config>-->
<!--        方式一：通过SpringAPI-->
<!--        切入点： 要执行的位置-->
<!--        <aop:pointcut id="pointCut" expression="execution(* com.quan.service.UserServiceImpl.*(..))"/>-->

<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointCut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointCut"/>-->

<!--        方式二：使用自定义类-->
<!--        <aop:aspect id="myAop" ref="myAop">-->
<!--            <aop:pointcut id="pointCut" expression="execution(* com.quan.service.UserServiceImpl.*(..))"/>-->
<!--            -->
<!--            <aop:before method="Before" pointcut-ref="pointCut"/>-->
<!--            <aop:after method="After" pointcut-ref="pointCut"/>-->
<!--        </aop:aspect>-->


<!--        方式三：使用注解实现-->

<!--    </aop:config>-->

</beans>